import java.util.*;
import java.io.*;
import java.math.*;

public class C {
   static Scanner sc;

   static long[] table = {
         1, 1,
         2, 4,
         3, 9,
         11, 121,
         22, 484,
         101, 10201,
         111, 12321,
         121, 14641,
         202, 40804,
         212, 44944,
         1001, 1002001,
         1111, 1234321,
         2002, 4008004L,
         10001, 100020001L,
         10101, 102030201L,
         10201, 104060401L,
         11011, 121242121L,
         11111, 123454321L,
         11211, 125686521L,
         20002, 400080004L,
         20102, 404090404L,
         100001, 10000200001L,
         101101, 10221412201L,
         110011, 12102420121L,
         111111, 12345654321L,
         200002, 40000800004L,
         1000001, 1000002000001L,
         1001001, 1002003002001L,
         1002001, 1004006004001L,
         1010101, 1020304030201L,
         1011101, 1022325232201L,
         1012101, 1024348434201L,
         1100011, 1210024200121L,
         1101011, 1212225222121L,
         1102011, 1214428244121L,
         1110111, 1232346432321L,
         1111111, 1234567654321L,
         2000002, 4000008000004L,
         2001002, 4004009004004L,
         10000001, 100000020000001L,
         10011001, 100220141022001L,
         10100101, 102012040210201L,
         10111101, 102234363432201L,
         11000011, 121000242000121L,
         11011011, 121242363242121L,
         11100111, 123212464212321L,
         11111111, 123456787654321L,
         20000002, 400000080000004L,
         100000001, 10000000200000001L,
         100010001, 10002000300020001L,
         100020001, 10004000600040001L,
         100101001, 10020210401202001L,
         100111001, 10022212521222001L,
         100121001, 10024214841242001L,
         101000101, 10201020402010201L,
         101010101, 10203040504030201L,
         101020101, 10205060806050201L,
         101101101, 10221432623412201L,
         101111101, 10223454745432201L,
         110000011, 12100002420000121L,
         110010011, 12102202520220121L,
         110020011, 12104402820440121L,
         110101011, 12122232623222121L,
         110111011, 12124434743442121L,
         111000111, 12321024642012321L,
         111010111, 12323244744232321L,
         111101111, 12343456865434321L,
         111111111, 12345678987654321L,
         200000002, 40000000800000004L,
         200010002, 40004000900040004L,
         1000000001, 1000000002000000001L,
         1000110001, 1000220014100220001L,
         1001001001, 1002003004003002001L,
         1001111001, 1002223236323222001L,
         1010000101, 1020100204020010201L,
         1010110101, 1020322416142230201L,
         1011001101, 1022123226223212201L,
         1011111101, 1022345658565432201L,
         1100000011, 1210000024200000121L,
         1100110011, 1210242036302420121L,
         1101001011, 1212203226223022121L,
         1101111011, 1212445458545442121L,
         1110000111, 1232100246420012321L,
         1110110111, 1232344458544432321L,
         1111001111, 1234323468643234321L,
         2000000002, 4000000008000000004L
   };

   public static void go() {
      long A = sc.nextLong();
      long B = sc.nextLong();

      int count = 0;
      for (int i=1; i<table.length; i+=2) {
         if (table[i] >= A && table[i] <= B)
            count++;
      }
      System.out.println(count);

      /*
      for (long i=1; ; i++) {
         StringBuilder a = new StringBuilder();
         a.append(i);
         String orig = a.toString();
         if (a.reverse().toString().equals(orig)) {
            a = new StringBuilder();
            a.append(i*i);
            orig = a.toString();
            if (a.reverse().toString().equals(orig)) {
               System.out.format("%d %d\n", i, i*i);
            }
         }
      }
      */
   }

   public static void main(String[] args) {
      sc = new Scanner(System.in);
      int T = sc.nextInt();
      for (int i=1; i<=T; i++) {
         System.out.format("Case #%d: ", i);
         go();
      }
   }
}
