#include <iostream>
#include <algorithm>
using namespace std;

int main()
{
    enum { NUM_FS = 39 };
    long long fs[NUM_FS] = { 1, 4, 9, 121, 484, 10201, 12321, 14641, 40804, 44944, 1002001,
                       1234321, 4008004, 100020001, 102030201, 104060401, 121242121,
                       123454321, 125686521, 400080004, 404090404, 10000200001,
                       10221412201, 12102420121, 12345654321, 40000800004, 1000002000001,
                       1002003002001, 1004006004001, 1020304030201, 1022325232201,
                       1024348434201, 1210024200121, 1212225222121, 1214428244121,
                       1232346432321, 1234567654321, 4000008000004, 4004009004004 };
    
    int T;
    cin >> T;
    for(int t = 0; t < T; ++t)
    {
        long long A, B;
        cin >> A >> B;
        long long *lb = lower_bound(fs, fs + NUM_FS, A);
        long long *ub = upper_bound(fs, fs + NUM_FS, B);
        cout << "Case #" << (t+1) << ": " << (ub - lb) << endl;
    }
    return 0;
}