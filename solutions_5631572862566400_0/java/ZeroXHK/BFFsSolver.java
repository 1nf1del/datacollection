
import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

/**
 * Google code jam problem solver.
 * Template generated by <a href="https://github.com/Faylixe/jammy">Jammy</a> plugin.
 * 
 * @author
 */
public final class BFFsSolver {

	/** Scanner instance that allows to parse problem input. **/
	private final Scanner scanner;

	/**
	 * Default constructor.
	 * 
	 * @param scanner Scanner instance that allows to parse problem input. 
	 */
	private BFFsSolver(final Scanner scanner) {
		this.scanner = scanner;
	}

	public class Child {
		Child bff;
		Child end;
		List<Child> loop;
		int loopSize;
		
		public Child() {
			loopSize = 0;
		}
	}
	
	/**
	 * Solve a problem instance using internal
	 * scanner to retrieve problem input.
	 */
	public void solve() {
		int n = scanner.nextInt();
		List<Child> children = new ArrayList<Child>();
		for (int i = 1; i <= n; i++) {
			children.add(new Child());
		}
		
		for (int i = 0; i < n; i++) {
			int f = scanner.nextInt();
			children.get(i).bff = children.get(f-1);
		}
		
		for (int i = 0; i < n; i++) {
			List<Child> temp = new ArrayList<Child>();
			Child tc = children.get(i);
			temp.add(tc);
			while (!temp.contains(tc.bff)) {
				temp.add(tc.bff);
				tc = tc.bff;
			}
			children.get(i).loop = temp;
			children.get(i).end = tc;
			children.get(i).loopSize = temp.size();
		}
		
		int result = 0;		
		for (int i = 0; i < n; i++) {
			int t = children.get(i).loopSize;
			if (t > result) {
				if (children.get(i).end.bff == children.get(i) || children.get(i).end.bff == children.get(i).loop.get(children.get(i).loopSize-2)) {
					result = t;	
				}
			}
		}
		
		for (int i = 0; i < n; i++) {
			Child tc1 = children.get(i);
			if (tc1.end.bff == tc1.loop.get(tc1.loopSize-2)){
				for (int j = 0; j < n; j++) {
					Child tc2 = children.get(j);
					if (!tc1.loop.contains(tc2)){
						for (Child tc : tc2.loop) {
							if (tc1.loop.contains(tc)) {
								if (tc == tc1.end) {
									int temp = tc1.loop.indexOf(tc) + tc2.loop.indexOf(tc) + 1;
									if (temp > result) {
										result = temp;
									}
								}
								break;
							}
						}					
					}
				}
			}
		}

		System.out.println(result);
	}

	/**
	 * Solver entry point.
	 * 
	 * @param args Command line parameters.
	 * @throws FileNotFoundException If input file could not be parsed.
	 */
	public static void main(final String [] args) throws FileNotFoundException {
		final File file = new File(args[0]);
		final Scanner scanner = new Scanner(file);
		final int n = scanner.nextInt();
		final BFFsSolver solver = new BFFsSolver(scanner);
		for (int i = 0; i < n; i++) {
			System.out.print("Case #" + (i + 1) + ": ");
			solver.solve();
		}
		scanner.close();
	}

}