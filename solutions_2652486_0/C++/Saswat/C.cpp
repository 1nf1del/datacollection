#include <map>
#include <cstdio>

using namespace std;

map< int, map<int, int> > d;

int main() {
d[8][0] = 2; d[8][1] = 2; d[8][2] = 2;
d[12][0] = 2; d[12][1] = 2; d[12][2] = 3;
d[16][0] = 2; d[16][1] = 2; d[16][2] = 4;
d[20][0] = 2; d[20][1] = 2; d[20][2] = 5;
d[18][0] = 2; d[18][1] = 3; d[18][2] = 3;
d[24][0] = 2; d[24][1] = 3; d[24][2] = 4;
d[30][0] = 2; d[30][1] = 3; d[30][2] = 5;
d[32][0] = 2; d[32][1] = 4; d[32][2] = 4;
d[40][0] = 2; d[40][1] = 4; d[40][2] = 5;
d[50][0] = 2; d[50][1] = 5; d[50][2] = 5;
d[27][0] = 3; d[27][1] = 3; d[27][2] = 3;
d[36][0] = 3; d[36][1] = 3; d[36][2] = 4;
d[45][0] = 3; d[45][1] = 3; d[45][2] = 5;
d[48][0] = 3; d[48][1] = 4; d[48][2] = 4;
d[60][0] = 3; d[60][1] = 4; d[60][2] = 5;
d[75][0] = 3; d[75][1] = 5; d[75][2] = 5;
d[64][0] = 4; d[64][1] = 4; d[64][2] = 4;
d[80][0] = 4; d[80][1] = 4; d[80][2] = 5;
d[100][0] = 4; d[100][1] = 5; d[100][2] = 5;
d[125][0] = 5; d[125][1] = 5; d[125][2] = 5;
d[1][0] = 1; d[1][1] = 1; d[1][2] = 1;
d[2][0] = 1; d[2][1] = 1; d[2][2] = 2;
d[3][0] = 1; d[3][1] = 1; d[3][2] = 3;
d[4][0] = 1; d[4][1] = 1; d[4][2] = 4;
d[5][0] = 1; d[5][1] = 1; d[5][2] = 5;
d[6][0] = 1; d[6][1] = 2; d[6][2] = 3;
d[10][0] = 1; d[10][1] = 2; d[10][2] = 5;
d[9][0] = 1; d[9][1] = 3; d[9][2] = 3;
d[15][0] = 1; d[15][1] = 3; d[15][2] = 5;
d[25][0] = 1; d[25][1] = 5; d[25][2] = 5;

	int k[15];
	int T, R, M, N, K;
	scanf("%d %d %d %d %d", &T, &R, &M, &N, &K);
	
	for(int i = 1; i <= T; ++i) {
		printf("Case #%d:\n", i);
		
		for(int x = 0; x < R; ++x) {
			map<int, int> z;
			map<int, map<int, int> > zd;
			
			int max = 0;
			for(int j = 0; j < K; ++j) {
				scanf("%d", k+j);
				if(k[j] > max)
					max = k[j];
			}
			
			zd[max][0] = d[max][0]; zd[max][1] = d[max][1]; zd[max][2] = d[max][2];
			z[d[max][0]] = z[d[max][1]] = z[d[max][2]] = 1;
			
			for(int j = 0; j < K; ++j) {
				for(int p = 0; p < 3; ++p) {
					if(d[k[j]][p] > 1 && !z[d[k[j]][p]]) {
						for(int q = 0; q < 3; ++q) {
							if(zd[max][q] == 1) {
								zd[max][q] = d[k[j]][p];
								z[d[k[j]][p]] = 1;
								break;
							}
						}
					}
				}
			}
			
			printf("%d%d%d\n", zd[max][0], zd[max][1], zd[max][2]);
		}
	}
}
