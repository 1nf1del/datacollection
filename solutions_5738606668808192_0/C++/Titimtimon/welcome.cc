#include <iostream>
#include <string>
#include <stdio.h>
#include <cmath>
#include <string>
#include <cstring>
#include <set>
#include <map>
#include <queue>
#include <algorithm>
#include <stack>
#include <vector>

#define mp make_pair
#define ll long long
#define pb push_back

using namespace std;
vector <int> v;
vector <string> ans12,ans13,ans14,ans15,ans16;

int main() {
    
    freopen("inp.txt","r",stdin);
    freopen("out.txt","w",stdout);
    
    ans12.push_back("100000000001 3 2 5 2 7 2 3 2 11 ");
ans12.push_back("100000000011 7 13 3 11 43 3 73 7 3 ");
ans12.push_back("100000000111 3 2 5 2 7 2 3 2 11 ");
ans12.push_back("100000001011 29 2 541 2 13 2 26987 2 587 ");
ans12.push_back("100000001101 3 2 5 2 7 2 3 2 7 ");
ans12.push_back("100000010001 5 13 3 31 43 3 73 7 3 ");
ans12.push_back("100000010011 3 2 5 2 7 2 3 2 11 ");
ans12.push_back("100000011001 3 2 5 2 7 2 3 2 11 ");
ans12.push_back("100000011101 31 5 11 11 5 2801 5 11 19 ");
ans12.push_back("100000011111 3 2 3 2 7 2 3 2 3 ");
ans12.push_back("100000100101 3 2 5 2 7 2 3 2 11 ");
ans12.push_back("100000101111 5 2 3 2 11 2 5 2 3 ");
ans12.push_back("100000110001 3 2 5 2 7 2 3 2 11 ");
ans12.push_back("100000110111 3 2 3 2 7 2 3 2 3 ");
ans12.push_back("100000111011 7 2 3 2 43 2 73 2 3 ");
ans12.push_back("100000111101 3 2 3 2 7 2 3 2 3 ");
ans12.push_back("100001000011 3 2 5 2 7 2 3 2 11 ");
ans12.push_back("100001000101 29 2 29 2 991 2 83 2 144037 ");
ans12.push_back("100001001001 3 2 5 2 7 2 3 2 11 ");
ans12.push_back("100001001111 3 2 3 2 7 2 3 2 3 ");
ans12.push_back("100001010111 5 2 3 2 37 2 5 2 3 ");
ans12.push_back("100001011011 3 2 3 2 7 2 3 2 3 ");
ans12.push_back("100001100001 3 2 5 2 7 2 3 2 11 ");
ans12.push_back("100001100111 3 2 3 2 7 2 3 2 3 ");
ans12.push_back("100001101011 5 2 3 2 37 2 5 2 3 ");
ans12.push_back("100001101101 3 2 3 2 7 2 3 2 3 ");
ans12.push_back("100001101111 17 163 43 41 6481 29 7 547 239 ");
ans12.push_back("100001110011 3 2 3 2 7 2 3 2 3 ");
ans12.push_back("100001110101 5 2 3 2 37 2 5 2 3 ");
ans12.push_back("100001110111 11 7 11 2207 61 13 7 32363 7 ");
ans12.push_back("100001111001 3 2 3 2 7 2 3 2 3 ");
ans12.push_back("100001111111 3 2 5 2 7 2 3 2 11 ");
ans12.push_back("100010000001 7 5 3 31 43 3 5 7 3 ");
ans12.push_back("100010000101 3 2 5 2 7 2 3 2 11 ");
ans12.push_back("100010001111 7 2 3 2 19 2 23 2 3 ");
ans12.push_back("100010010001 3 2 5 2 7 2 3 2 11 ");
ans12.push_back("100010010101 13 5 673 23 5 11 5 383 206813 ");
ans12.push_back("100010010111 3 2 3 2 7 2 3 2 3 ");
ans12.push_back("100010011001 31 11 11 11 5 17 31 11 29 ");
ans12.push_back("100010011101 3 2 3 2 7 2 3 2 3 ");
ans12.push_back("100010100001 47 2 11 2 1367 2 907 2 7 ");
ans12.push_back("100010100111 5 2 3 2 37 2 5 2 3 ");
ans12.push_back("100010101001 3 5 919 3 5 233 3 653 237043 ");
ans12.push_back("100010101011 7 2 3 2 43 2 73 2 3 ");
ans12.push_back("100010110011 17 2 3 2 271 2 11 2 3 ");
ans12.push_back("100010110101 3 2 3 2 7 2 3 2 3 ");
ans12.push_back("100010111001 7 2 3 2 43 2 73 2 3 ");
ans12.push_back("100011000001 3 2 5 2 7 2 3 2 11 ");
ans12.push_back("100011000111 3 2 3 2 7 2 3 2 3 ");
ans12.push_back("100011001001 13 73 241 601 5 13 37 457 9901 ");

ans13.push_back("1000000000001 17 2 97 2 1297 2 17 2 73 ");
ans13.push_back("1000000000101 3 179 3 3 41 3 3 761 3 ");
ans13.push_back("1000000000111 11 2 2971 2 977 2 37 2 7 ");
ans13.push_back("1000000001001 5 107 3 2647 11 3 191 29 3 ");
ans13.push_back("1000000001011 3 2 5 2 7 2 3 2 11 ");
ans13.push_back("1000000010011 5 2 349 2 131 2 11 2 401 ");
ans13.push_back("1000000011001 13 2 7 2 19 2 5 2 31 ");
ans13.push_back("1000000011011 7 11 11 11 5 617 31 7 41 ");
ans13.push_back("1000000011101 3 7 13 3 5 5 3 73 7 ");
ans13.push_back("1000000100011 3 2 5 2 7 2 3 2 11 ");
ans13.push_back("1000000101001 3 2 5 2 7 2 3 2 11 ");
ans13.push_back("1000000101111 3 2 3 2 7 2 3 2 3 ");
ans13.push_back("1000000110111 7 2 3 2 43 2 73 2 3 ");
ans13.push_back("1000000111011 3 2 3 2 7 2 3 2 3 ");
ans13.push_back("1000001000001 3 19 3 3 19 3 3 19 3 ");
ans13.push_back("1000001000101 5 2 17 2 37 2 5 2 73 ");
ans13.push_back("1000001001111 5 2 3 2 37 2 5 2 3 ");
ans13.push_back("1000001010011 3 5 89 3 5 17 3 7 97 ");
ans13.push_back("1000001010111 47 2 3 2 13 2 247879 2 3 ");
ans13.push_back("1000001011001 3 11 11 3 5 5 3 11 41 ");
ans13.push_back("1000001011111 3 487 7 3 59 29 3 547 239 ");
ans13.push_back("1000001100001 7 2 11 2 127 2 193 2 3083 ");
ans13.push_back("1000001100111 13 2 3 2 1297 2 17 2 3 ");
ans13.push_back("1000001101011 3 2 3 2 7 2 3 2 3 ");
ans13.push_back("1000001101101 5 2 3 2 37 2 5 2 3 ");
ans13.push_back("1000001110101 11 2 3 2 53 2 97 2 3 ");
ans13.push_back("1000001110111 3 439 251 3 29 5 3 11 182387 ");
ans13.push_back("1000010000001 5 29 3 7 641 3 45289 31397 3 ");
ans13.push_back("1000010000011 3 2 5 2 7 2 3 2 11 ");
ans13.push_back("1000010001001 3 2 5 2 7 2 3 2 11 ");
ans13.push_back("1000010001111 3 2 3 2 7 2 3 2 3 ");
ans13.push_back("1000010010111 31 2 3 2 29 2 11 2 3 ");
ans13.push_back("1000010011011 3 2 3 2 7 2 3 2 3 ");
ans13.push_back("1000010100001 3 2 5 2 7 2 3 2 11 ");
ans13.push_back("1000010100111 3 2 3 2 7 2 3 2 3 ");
ans13.push_back("1000010101001 5 23 19 8231 5 5 97 1021 19 ");
ans13.push_back("1000010101011 17 2 3 2 1297 2 17 2 3 ");
ans13.push_back("1000010101101 3 2 3 2 7 2 3 2 3 ");
ans13.push_back("1000010110011 3 2 3 2 7 2 3 2 3 ");
ans13.push_back("1000010110101 7 2 3 2 43 2 73 2 3 ");
ans13.push_back("1000010110111 11 5 31 7 39409 163 5 101 2579 ");
ans13.push_back("1000010111001 3 2 3 2 7 2 3 2 3 ");
ans13.push_back("1000010111111 3 2 5 2 7 2 3 2 11 ");
ans13.push_back("1000011000111 5 2 3 2 37 2 5 2 3 ");
ans13.push_back("1000011001011 3 2 3 2 7 2 3 2 3 ");
ans13.push_back("1000011001101 11 2 3 2 13 2 17 2 3 ");
ans13.push_back("1000011010011 59 2 3 2 19 2 261641 2 3 ");
ans13.push_back("1000011010101 31 2 3 2 67 2 83401 2 3 ");
ans13.push_back("1000011011001 19 2 3 2 11 2 3061 2 3 ");
ans13.push_back("1000011100011 3 2 3 2 7 2 3 2 3 ");
    
ans14.push_back("10000000000001 3 2 5 2 7 2 3 2 11 ");
ans14.push_back("10000000000101 7 13 3 31 11 3 73 7 3 ");
ans14.push_back("10000000000111 3 2 5 2 7 2 3 2 11 ");
ans14.push_back("10000000001001 59 11 3 163 23 3 1553 43943 3 ");
ans14.push_back("10000000001101 3 2 5 2 7 2 3 2 11 ");
ans14.push_back("10000000010011 3 2 5 2 7 2 3 2 11 ");
ans14.push_back("10000000010101 43 2 59 2 13 2 41 2 2129 ");
ans14.push_back("10000000010111 5 11 11 11 5 5 31 11 41 ");
ans14.push_back("10000000011001 3 2 5 2 7 2 3 2 7 ");
ans14.push_back("10000000011111 3 2 3 2 7 2 3 2 3 ");
ans14.push_back("10000000100001 5 13 3 29 43 3 73 7 3 ");
ans14.push_back("10000000100101 3 2 5 2 7 2 3 2 11 ");
ans14.push_back("10000000101111 7 2 3 2 43 2 41 2 3 ");
ans14.push_back("10000000110001 3 2 5 2 7 2 3 2 11 ");
ans14.push_back("10000000110111 3 2 3 2 7 2 3 2 3 ");
ans14.push_back("10000000111101 3 2 3 2 7 2 3 2 3 ");
ans14.push_back("10000000111111 5 1093 43 19531 263 5 7 163 61 ");
ans14.push_back("10000001000011 3 2 5 2 7 2 3 2 11 ");
ans14.push_back("10000001001001 3 2 5 2 7 2 3 2 11 ");
ans14.push_back("10000001001011 7 7 67 17 5 151 23 7 7 ");
ans14.push_back("10000001001111 3 2 3 2 7 2 3 2 3 ");
ans14.push_back("10000001010101 3 11 11 3 5 13 3 11 41 ");
ans14.push_back("10000001010111 17 2 3 2 1297 2 17 2 3 ");
ans14.push_back("10000001011011 3 2 3 2 7 2 3 2 3 ");
ans14.push_back("10000001011101 5 2 3 2 37 2 5 2 3 ");
ans14.push_back("10000001100001 3 2 5 2 7 2 3 2 11 ");
ans14.push_back("10000001100111 3 2 3 2 7 2 3 2 3 ");
ans14.push_back("10000001101101 3 2 3 2 7 2 3 2 3 ");
ans14.push_back("10000001110011 3 2 3 2 7 2 3 2 3 ");
ans14.push_back("10000001110101 7 2 3 2 43 2 11 2 3 ");
ans14.push_back("10000001111001 3 2 3 2 7 2 3 2 3 ");
ans14.push_back("10000001111111 3 2 5 2 7 2 3 2 11 ");
ans14.push_back("10000010000101 3 2 5 2 7 2 3 2 11 ");
ans14.push_back("10000010001111 5 2 3 2 37 2 5 2 3 ");
ans14.push_back("10000010010001 3 2 5 2 7 2 3 2 11 ");
ans14.push_back("10000010010011 31 5 11 11 5 2801 5 11 7 ");
ans14.push_back("10000010010101 19 181 1847 19 5 60331 11 157 16763 ");
ans14.push_back("10000010010111 3 2 3 2 7 2 3 2 3 ");
ans14.push_back("10000010011011 17 2 3 2 71 2 17 2 3 ");
ans14.push_back("10000010011101 3 2 3 2 7 2 3 2 3 ");
ans14.push_back("10000010101101 5 2 3 2 29 2 5 2 3 ");
ans14.push_back("10000010110101 3 2 3 2 7 2 3 2 3 ");
ans14.push_back("10000010110111 5 7 7 229 11 5 7 167 7 ");
ans14.push_back("10000010111011 3 5 151 3 13 151 3 7 17 ");
ans14.push_back("10000010111111 83 2 5413 2 67 2 89 2 43 ");
ans14.push_back("10000011000001 3 2 5 2 7 2 3 2 11 ");
ans14.push_back("10000011000111 3 2 3 2 7 2 3 2 3 ");
ans14.push_back("10000011001011 5 2 3 2 17 2 5 2 3 ");
ans14.push_back("10000011001101 3 2 3 2 7 2 3 2 3 ");
ans14.push_back("10000011001111 37 127 53 73 47 137 7 11 47 ");

ans15.push_back("100000000000001 5 2 17 2 37 2 5 2 29 ");
ans15.push_back("100000000000011 7 13 3 31 43 3 61 7 3 ");
ans15.push_back("100000000000111 37 2 19 2 683 2 11 2 17 ");
ans15.push_back("100000000001011 3 2 5 2 7 2 3 2 11 ");
ans15.push_back("100000000001111 23 7 11 11 5 17 31 11 7 ");
ans15.push_back("100000000010001 3 7 3 3 31 3 3 7 3 ");
ans15.push_back("100000000010101 5 2 17 2 11 2 5 2 47 ");
ans15.push_back("100000000010111 3 67 41 3 5 41 3 1260767 19 ");
ans15.push_back("100000000011001 61 2 37 2 6271 2 97 2 16903 ");
ans15.push_back("100000000011101 3 1931 191 3 5 383291 3 109517 31 ");
ans15.push_back("100000000011111 5 2 3 2 17 2 5 2 3 ");
ans15.push_back("100000000100011 3 2 5 2 7 2 3 2 11 ");
ans15.push_back("100000000100111 11 5 1733 127 5 13 5 23 43 ");
ans15.push_back("100000000101001 3 2 5 2 7 2 3 2 7 ");
ans15.push_back("100000000101101 7 37 569 23 5 59 70117 7 139 ");
ans15.push_back("100000000101111 3 2 3 2 7 2 3 2 3 ");
ans15.push_back("100000000110101 3 7 13 3 5 11 3 73 7 ");
ans15.push_back("100000000110111 17 2 3 2 19 2 17 2 3 ");
ans15.push_back("100000000111011 3 2 3 2 7 2 3 2 3 ");
ans15.push_back("100000000111101 5 2 3 2 37 2 5 2 3 ");
ans15.push_back("100000001001101 3 5 7 3 5 2801 3 11 41 ");
ans15.push_back("100000001010001 5 2 11 2 37 2 5 2 101 ");
ans15.push_back("100000001010011 3 17 3847 3 5 13 3 17 53 ");
ans15.push_back("100000001010101 43 1783 5 29297 5 487 3301 5 157 ");
ans15.push_back("100000001010111 7 2 3 2 11 2 73 2 3 ");
ans15.push_back("100000001011001 3 7 13 3 5 43 3 29 7 ");
ans15.push_back("100000001011011 5 2 3 2 37 2 5 2 3 ");
ans15.push_back("100000001101011 3 2 3 2 7 2 3 2 3 ");
ans15.push_back("100000001101111 5 307 37 17 4339 5 7 103 367 ");
ans15.push_back("100000001110011 7 2 3 2 43 2 23 2 3 ");
ans15.push_back("100000001111001 5 2 3 2 37 2 5 2 3 ");
ans15.push_back("100000001111101 3 7 13 3 11 17 3 73 7 ");
ans15.push_back("100000001111111 11 2 15991 2 270463 2 59 2 40637 ");
ans15.push_back("100000010000001 7 13 3 31 43 3 73 7 3 ");
ans15.push_back("100000010000011 3 2 5 2 7 2 3 2 11 ");
ans15.push_back("100000010000101 83 2 89 2 17851 2 4937 2 57773 ");
ans15.push_back("100000010001001 3 2 5 2 7 2 3 2 11 ");
ans15.push_back("100000010001011 13 11 11 7 5 79 31 11 41 ");
ans15.push_back("100000010001101 5 7 47 8147 5 5 11 9739 7 ");
ans15.push_back("100000010001111 3 2 3 2 7 2 3 2 3 ");
ans15.push_back("100000010010101 3 37 23 3 5 20899 3 149 163 ");
ans15.push_back("100000010010111 5 2 3 2 37 2 5 2 3 ");
ans15.push_back("100000010011011 3 2 3 2 7 2 3 2 3 ");
ans15.push_back("100000010011101 7 2 3 2 41 2 17 2 3 ");
ans15.push_back("100000010100001 3 2 5 2 7 2 3 2 11 ");
ans15.push_back("100000010100111 3 2 3 2 7 2 3 2 3 ");
ans15.push_back("100000010101011 5 2 3 2 37 2 5 2 3 ");
ans15.push_back("100000010101101 3 2 3 2 7 2 3 2 3 ");
ans15.push_back("100000010101111 29 31 373 7 11 83 7 491 363799 ");
ans15.push_back("100000010110011 3 2 3 2 7 2 3 2 3 ");

ans16.push_back("1000000000000001 3 2 5 2 7 2 3 2 7 ");
ans16.push_back("1000000000000101 13 11 3 4751 173 3 53 109 3 ");
ans16.push_back("1000000000000111 3 2 5 2 7 2 3 2 11 ");
ans16.push_back("1000000000001001 73 5 3 19 19 3 5 19 3 ");
ans16.push_back("1000000000001101 3 2 5 2 7 2 3 2 11 ");
ans16.push_back("1000000000010011 3 2 5 2 7 2 3 2 7 ");
ans16.push_back("1000000000011001 3 2 5 2 7 2 3 2 11 ");
ans16.push_back("1000000000011011 5 1567 15559 6197 5 5 1031 7 83 ");
ans16.push_back("1000000000011111 3 2 3 2 7 2 3 2 3 ");
ans16.push_back("1000000000100101 3 2 5 2 7 2 3 2 7 ");
ans16.push_back("1000000000101011 3 7 13 3 5 43 3 73 7 ");
ans16.push_back("1000000000101111 5 2 3 2 37 2 5 2 3 ");
ans16.push_back("1000000000110001 3 2 5 2 7 2 3 2 11 ");
ans16.push_back("1000000000110101 23 17 11 23 5 299699 43 239 59 ");
ans16.push_back("1000000000110111 3 2 3 2 7 2 3 2 3 ");
ans16.push_back("1000000000111011 17 2 3 2 73 2 17 2 3 ");
ans16.push_back("1000000000111101 3 2 3 2 7 2 3 2 3 ");
ans16.push_back("1000000001000011 3 2 5 2 7 2 3 2 11 ");
ans16.push_back("1000000001001001 3 2 5 2 7 2 3 2 7 ");
ans16.push_back("1000000001001111 3 2 3 2 7 2 3 2 3 ");
ans16.push_back("1000000001010101 3 7 13 3 5 17 3 53 7 ");
ans16.push_back("1000000001010111 5 2 3 2 37 2 5 2 3 ");
ans16.push_back("1000000001011001 11 5 281 101 5 67 5 13 19 ");
ans16.push_back("1000000001011011 3 2 3 2 7 2 3 2 3 ");
ans16.push_back("1000000001011101 17 2 3 2 1297 2 11 2 3 ");
ans16.push_back("1000000001011111 59 113 7 157 19 1399 7 43 107 ");
ans16.push_back("1000000001100001 3 2 5 2 7 2 3 2 11 ");
ans16.push_back("1000000001100011 23 19 11 105491 5 47 11117 1787 127 ");
ans16.push_back("1000000001100111 3 2 3 2 7 2 3 2 3 ");
ans16.push_back("1000000001101011 5 2 3 2 37 2 5 2 3 ");
ans16.push_back("1000000001101101 3 2 3 2 7 2 3 2 3 ");
ans16.push_back("1000000001110011 3 2 3 2 7 2 3 2 3 ");
ans16.push_back("1000000001110101 5 2 3 2 37 2 5 2 3 ");
ans16.push_back("1000000001111001 3 2 3 2 7 2 3 2 3 ");
ans16.push_back("1000000001111011 31 557 7 19 23 1129 7 5441 241 ");
ans16.push_back("1000000001111101 7 19 43 17 55987 23 7 7 31 ");
ans16.push_back("1000000001111111 3 2 5 2 7 2 3 2 7 ");
ans16.push_back("1000000010000011 167 2 11 2 58427 2 23 2 839 ");
ans16.push_back("1000000010000101 3 2 5 2 7 2 3 2 11 ");
ans16.push_back("1000000010001001 5 2 7 2 1933 2 29 2 157 ");
ans16.push_back("1000000010010001 3 2 5 2 7 2 3 2 7 ");
ans16.push_back("1000000010010111 3 2 3 2 7 2 3 2 3 ");
ans16.push_back("1000000010011001 7 1667 179 13 5 11 23 7 311 ");
ans16.push_back("1000000010011011 11 2 3 2 13 2 47 2 3 ");
ans16.push_back("1000000010011101 3 2 3 2 7 2 3 2 3 ");
ans16.push_back("1000000010100011 3 1259 421 3 5 8893 3 67 17 ");
ans16.push_back("1000000010100111 5 2 3 2 37 2 5 2 3 ");
ans16.push_back("1000000010101001 3 5 13 3 5 43 3 73 7 ");
ans16.push_back("1000000010110011 47 2 3 2 11 2 204311 2 3 ");
ans16.push_back("1000000010110101 3 2 3 2 7 2 3 2 3 ");


    int t;
    cin >> t;
    
    for (int i = 0; i < t; i++) {
        int n,k;
        cin >> n >> k;
        cout << "Case #" << i+1 << ":\n";
        if (n <= 11)
        for (int j = 0; j < (1<<n); j++) 
            if (((j&1) > 0) && ((j&(1<<(n-1)))>0)) 
            {
//                cout << j << "\n";
                v.clear();
                bool z2 = true;
                for (int d = 2; d <= 10; d++) {
                    
                    long long sum = 0;
                    long long x = 1;
                    for (int l = 0; l < n; l++) {
                        
//                        cout << ((j&(1<<l)) > 0);
                        
                        sum += ((j&(1ll<<l)) > 0)*x;
                        
                        x *= d;
                
                    }
                    
                    
                    bool z = false;
                    for (long long j1 = 2; j1*j1 <= sum; j1++)
                        if (sum%j1 == 0 && j1 != sum && !z) {
                            v.push_back(j1);
                            z = true;
                        }
//                    cout << " " << d << ": " << sum << " (" << z << ")";
                    if (!z) z2 = false;
                }
//                cout << "    " << z2 << "! \n";
//            cout << "\n-------------\n";
            
            if (z2 && k) {
//                cout << "ans16.push_back(\"";
                k--;
                for (int j1 = n-1; j1 >= 0; j1--)
                    cout << ((j&(1<<j1)) > 0);
                cout << " ";
                for (int j1 = 0; j1 < v.size(); j1++)
                    cout << v[j1] << " ";
//                cout << "\");\n";
                cout << "\n";
            }
            
                if (!k) break;
            
            }
        
        if (n == 12)
            for (int j = 0; j < k; j++)
                cout << ans12[j] << "\n";
        if (n == 13)
            for (int j = 0; j < k; j++)
                cout << ans13[j] << "\n";
        if (n == 14)
            for (int j = 0; j < k; j++)
                cout << ans14[j] << "\n";
        if (n == 15)
            for (int j = 0; j < k; j++)
                cout << ans15[j] << "\n";
        if (n == 16)
            for (int j = 0; j < k; j++)
                cout << ans16[j] << "\n";
        
        
       
    }
    
    
    
   
    return 0;
}