import java.io.*;import java.util.*;class Kingdom {	public static void main(String [] args) throws Exception{		BufferedReader in = new BufferedReader(new InputStreamReader(System.in));		int T = Integer.parseInt(in.readLine());		for(int i = 0; i < T; i++){			int N = Integer.parseInt(in.readLine());						int[] req1 = new int[N];			int[] req2 = new int[N];			boolean[] beaten1 = new boolean[N];			boolean[] beaten2 = new boolean[N];			for(int j = 0; j < N; j++){				StringTokenizer st = new StringTokenizer(in.readLine());				req1[j] = Integer.parseInt(st.nextToken());				req2[j] = Integer.parseInt(st.nextToken());			}			int count = 0;			int starcount = 0;			A: while(true){				int beat2with0 = 0;				for(int j = 0; j < N; j++){					if(req2[j]<=starcount && !beaten2[j]&&!beaten1[j]){						beat2with0++;						count++;						beaten2[j] = true;						beaten1[j] = true;					}				}				if(beat2with0>0){					starcount+=2*beat2with0;				} else {					int beat2with1 = 0;					for(int j = 0; j < N; j++){						if(req2[j]<=starcount && !beaten2[j]&&beaten1[j]){							beat2with1++;							count++;							beaten2[j] = true;							starcount+=beat2with1;							continue A;						}					}					if(beat2with1==0){						int level = -1;						int levelstars = -1;						for(int j = 0; j < N; j++){							if(req1[j]<=starcount && !beaten2[j]&&!beaten1[j]){								if(req2[j]>levelstars){									levelstars = req2[j];									level = j;								}							}						}						if(level==-1)							break A;						else {							beaten1[level] = true;							count++;							starcount++;							continue A;						}					}				}			}			int a = 0;			for(; a < N; a++){				if(!beaten2[a])break;			}			if(a!=N){				System.out.println("Case #" + (i+1) + ": Too Bad");			} else {				System.out.println("Case #" + (i+1) + ": " + count);			}		}	}}