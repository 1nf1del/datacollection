using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Net.NetworkInformation;
using System.Numerics;
using System.Text;
using System.Threading.Tasks;


namespace QuialifyingRound1 {
    class Program
    {
        static Dictionary<string, int> dictionary = new Dictionary<string, int>();

        static int recursiveHelper(string key)
        {
            if (key.Length <= 0)
            {
                return 0;
            }
            if (dictionary.ContainsKey(key))
            {
                int result = 0;
                dictionary.TryGetValue(key, out result);
                return result;
            }
            else
            {
                char[] cArray = key.ToCharArray();
                if (cArray.Last() == '+')
                {
                    int itemp = recursiveHelper(key.Remove(key.Length-1));
                    try {
                        dictionary.Add(key, itemp);
                    } catch(Exception e) {

                    }
                    return itemp;
                }
                else if (cArray.First() == '+')
                {
                    int count = 0;
                    StringBuilder tempsb = new StringBuilder(key.Length);
                    while (cArray[count] == '+')
                    {
                        tempsb.Append("-");//[count] = '-';
                        count ++;
                        
                    }
                    tempsb.Append(key.Remove(0,count));
                    String temp = tempsb.ToString();





                    int itemp = 1 + recursiveHelper(temp);
                    try {
                        dictionary.Add(key, itemp);
                    } catch(Exception e) {

                    }
                    return itemp;
                }
                else
                {
                    // flip then switch
                    String temp = "";
                    for (int i = cArray.Length - 1; i >= 0; i--)
                    {
                        if (cArray[i] == '-')
                        {
                            temp += "+";
                        } 
                        else if(cArray[i] == '+') 
                        {
                            temp += "-";
                        } 
                    }
                    int itemp = 1 + recursiveHelper(temp);
                    try
                    {
                        dictionary.Add(key, itemp);
                    }
                    catch (Exception e)
                    {
                        
                    }
                    
                    return itemp;
                }
            }
        }

        static void Main(string[] args)
        {

            string input = "100\n-\n-+\n+-\n+++\n--+-\n+---+++--+-+----+++----++-+---+-+-++++-++-+-+++++---+++++---+--+-----++-+-++-++++-+-+-+-+++---+--+-+\n--------------------------------------------------\n--+\n-+---++--+-----+---++--++--++-+-+++--++-+++-+--++-++++++++-++++++++++--+-+--++-+--++---+++++-++---+-\n++---+++-+++---+-+-++-+----+-+++-+---\n-+-+--+++++--+-+-+-+--+-+-+++--++---+-++---++---+++++----+-+++++++--++--+---+++--++-+-++++-+-++-----\n-++\n-++--+-++-+-++-+++-++-+++-+++-+-+--++--+----+-+-+-+---+-+++++---+----+-+++--+---+--++++-++-++--++-++\n+-+-++---++-----++-++---++++++----++-+-----++--+---+------+--++--++-++\n-+--++-+-+-+--+--+--++----------++--+---+-++-+-+++---++-+----+-+----+++-+--+---+----+----+------+--+\n+-+++----+++++-++-+++++----+-++-++-+----+\n--+-----------+-++--+-+--++--+-++-+-++-+--++++++++----+-++-+-+----+-+--+++++-++-+-+++-+++-----+-+-++\n-+-++--++-++-+--+--++-+-------+++---++++++++++--+--++++++---++-++-++--+---+++-+++++-+++++-+--+++-+++\n++++-----+--++++--++-----+-+++-+-++-+++++++----+++-++---+++++----+---+---++++++-++--+-+---++++------\n-+++--+++++++-++-+-+------+++++-+++--++--+-++----++-++-+-+-----+---\n---+--+++---+-++-++-+-+--+++--+-+-+-----++---+++--+--+----+++-++-++++-++-----++---+--+-++-+--+--+--+\n---++---+------++++---+---++++-++-+--++-++-+-+-+++---+-+++-+++++-+---+++++-+--+-++-+-+----+-+-++++++\n+-+----+-+++++-++++-++----+-+-+++---++--++++--+-++---++++--+-+-----+-++++---+-++--------+-+---\n--+-+-----+++-+-+-+++--++---++---+-++++++-+--++-+++-+-+--+++--+-+-+-++-+---+++++++++-++++---+-++-+-+\n--+++--+-+-+---+-+++----+--+++-++----+--++-++-+-+-+++++-++++-++---+-+-----++-+----+-+---+++--+---+--\n+--\n++-+++--++++-++--+------++++---+---+++++--+-+--++++-++-+-++--++++-+-++-+---+---+--+--+--+++++-------\n--++--+++-+-----+++-+--+++-+---++-----++--+---++++----+--------+-+++++-+++++++++-+-+-++--+-+++----++\n+--+---++-++----+-++-++--+++-+++-+++------+---++-----+\n-+-++-+-+++-++-++--+--++-+-++-+-+-+--++--+-++++--+++---++-+--+-----++-++-++++++--+---+-+-+--+----+-+\n++++--+-+++-+-+---++---+-+--++++++++\n+--------------------------------------------------------------------------------------------------+\n+--------+\n++--+-------++--+--++--+++----------+--+-+-++-----+++++++---+-------+-+++++-+++--+-+-+----++++--++--\n--+-+---++-+-+-+--+--++++--+-++-+-+-+-++++++-----+-++--+--+--++-+-----+------+++-----+++++++++++-+-+\n+-++---+-+-+++++--+-----+---+++--++++-+---+-+-----+++---+-+++-+-+--++++-+-++-\n++-+++--++-++--+----++-+---++--++-++--+++---+--+++-+----+-++--+-+--++---+-------++++-+-++-++++-++-+-\n+-++---+-+-++-+++-+-+----+--+++-++--+--------+-+--++--+-+-+-+++--+--+++-+---++++++--+-++--+++-+---+-\n+++++-+-+-++--+---+-+--+-++-+-++--++-+++-+--++++++--+---++--++--+--+-++-++--+-+--+---++-++-+++-++++-\n++-+++-+---++----+++-+---++-+--+++++++--+++----+----+---+-+-+-+--+---++++----+----+-+----+-+--+++++-\n-----\n---+++-----+++-+++++--+-+-+----+-++--------+-+-++++---++-++++++++---++-+--+++---+-++++++-----+++++--\n++++++++++++++++++++++++++++++++++++++++++++++++++\n+---+----+--+-+++--+--++-+----+-+--+-++-+-+--+--++-+++----++-++--+++---+-++-++-+--+-+++--++++-+\n-++--+--++++--++-+-++++--+-+--+-+-+----+-+-+---+++--++-+++-+-+-+++--------+++---------+-+-++++++++--\n+++----++-+---+--+-++++-++-----++-++-++++++-+-+-+++-+-++-+----+++++++++++---++--+---+-+-+-+--++-+++-\n+++--++-+------++++---+---+-+----++------+-------+--++---+++-+--+-+-+-+--+---+-+++++++-+----+-------\n+++++\n++-++++++-++++-++--+++------++-+--++-+-+++-++------+-\n-+-+++-+-+++-+-++++++-+-+-+-+--+--++--+-++--++----++--+++-++--+--++--+++--++-++--+-----+----+-++----\n--\n-++---++++-++++-+++-++-+----+++-+++-+-+----+---+---+++---+------+-+------+-++++++--+-+-++--+-+-+++-+\n+--++-+++-+----+-+--+++---++-+-----+++++--+++-+-+-++-------++---+-+----+-+--++-++-+++++--++-++++-+-+\n--+-+++-+-++-+++----+-++-++-+----++--+--+-+---++-+--+++++--+-+++++-+++++-+-++--+--++--++--+++++---++\n+-+-+--++-+--+--++---+--+--++++++-++-+--+-++++++---+++--++-+---+--+---+-++-++-----++--++---+-+++-+-+\n----+-------++++-+--++++++-+--\n++-++-+--+++-++-+++-+-++++---------+------++-+-+++--++-++-++-+++++-+++++-+-++-+--+---++----+++-+-+++\n---+---+-+-+-++++--+++--++------+--++-+\n-+-+-+++-++-------++-+--++----++--+-+++--------+-++++++----+-+-+-+-+--+++++++-+----++++++++-+-+-++-+\n--+----++-+-+-+-+-+++---+++----+--+-++-++--+--+-+-+---+++--+++---+++---+++----+---+--++--+-++++++-+-\n--++------++-++-+---++++---+-+++-----++++---+--+++++-+-+-++-+-+++-++-+++-+----+---+-+-+---+--++++-++\n-+-+++++++-++--+---++-++--+-++++-+---+----+----+-++---+----++++-++-+--++--+++++--++++-------++--+++-\n+-++---+-++-+-+---++++-+++++-+++--+++-++-++------++----++------+-++---++-+--+++++++++-+--+-+--++----\n+---+--+-++----+++\n---\n-++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-\n++---+--+------+++-----+-+++--+++++--++-++-----+++++++--++-+--+--+++---+--+-+++----++--+-++--++-+-+-\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\n++-+-++-+-+---+-+++--+-+---+++----+-++++++++++-++++---++\n+-+++----+-+++---\n+-----+-++--+--++++++--++-++-+++++-++-+---+----------++-----+++-+-+-+---+-+-+--+---++-+--\n-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n++-++----+-+----+-+--+-++--+-----+-++++--+--++-----+---+++-+-+-++++++-+-+-++++++++-++---++--++--++--\n+-+\n---+-+------+-----+--+-+----+-----++--+++-+-+++-+-+-++-+++--++-+---+-----++-++-++++++-++++++-+-+-+-+\n+-+-+-+-+-\n-++------++---+---++-+-++-++--+-++-+---+++++++--++-+--+--+++--+----+--+++---++-+++++++-+-+-+--++----\n++++--++-+--++---+-++--+---++-+-++++-++++--+-++--+++--+-+++--+-+--++-++--+----+--++-+-+++--+++++-+-+\n-+--++-+---+++----++-+------+-+----+---+-+++-+++++-+-+-+-+++---+--++--+--++-+-++-++---++-+++---+-+--\n-++++++++-\n++-+++-++-+---+--+-+++++-+-++++++++--+--+-+--++-+---+++--+++--++-+++-+-+-+-+-+-++-\n--++++++-----+-----+++------+--+++--+---++------+--+++-++-++++++--+++++-++-+-+-++++-+++-+-----+++++-\n---+++++-+---+-+-+++++---+---+--+---\n-+--+-\n++\n+-++++--+++--+--++---++--+-----++-+-+-+----+-++--+-++--++--+--++--++++-+++---+---+--+-+--+++--++-+--\n+---+--+-++--++--+++--+----+---+-+++-+++-+---+--+++-+-+++++-++++-++--+++++-+++++--+--+-+++-+----+-+-\n++-\n-+-+-+-+-+\n--+++++-++-+-+-+-+-+-+++++-++++------+--+-+--+++-+++--++++---+++-+--+--+-++--+------+--+--+-+-+--+--\n-++++--++++--+-+-+-+-------+++----++-+-+---+-------+-----++---+-+++-+-+--+-+++++--++-+-+-+---++-+++-\n+++-+-+-+--+-+++---++-++++-+-+-+++++---++-+++-+---++-++-+++-------+-++--+-+---+--+-+--+++--+--+-++--\n+---+--+++--+++-+++++--++-+-+-++-+-++++-+++-++----+-++--+-+-----+-+++--+--+-++++--+--+++++++-------+\n-+++--+-----++-++-+++++---+--+-++-+-++++---+-----++++++--+-+---+++--++-++--+-+-++--+--++-----+----+-\n-+-\n-----+-+-+-++++--+-+---++--++++++-++++-++++++++--++--+-+---++---+---++-+++-++-+----+----+--++---+---\n+++----+--+--+---+++--+-++++++-++-----++-+++--+---+-+++-++--+++----------++++++-+---++--+-+-++--+++-\n+-+-+----+-+---+-++++---+-+-++-+-+-+---++--+-+++-+++----+-+--++-+-++-++-++-++-+--\n+\n--++----+--+-++-+++-++-+-+-++-+-++-+--+-+++---+++--++++-++--+--++-++++-++--+++++-+--+-++---+++-+--+-\n";
            char[] delimiterChars = { '\n' };
            string[] inputs = input.Split(delimiterChars);

            int numberOfCases = Int32.Parse(inputs[0]);
            

            for (int i = 1; i <= numberOfCases; i++)
            {
                // inputs[i]
                Console.Out.WriteLine("Case #" + i + ": " + recursiveHelper(inputs[i]));

            }



            

        }
    }
}
